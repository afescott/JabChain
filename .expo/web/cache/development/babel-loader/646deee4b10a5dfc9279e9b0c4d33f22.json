{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashle\\\\OneDrive\\\\Documents\\\\expoTest\\\\JabChain\\\\views\\\\Header.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from \"react\";\nimport { MenuNavigator } from \"../routes/NavigationService\";\nexport var Header = function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n\n    _this.togglerUser = function () {\n      _this.setState(function (previousState) {\n        return {\n          isLoggedIn: !previousState.isLoggedIn\n        };\n      });\n    };\n\n    _this.state = {\n      isLoggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      var display = this.state.isLoggedIn ? \"Sample User\" : this.props.message;\n      return React.createElement(View, {\n        style: styles.headStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.headText,\n        onPress: this.togglerUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \" \", display));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\nvar styles = StyleSheet.create({\n  headText: {\n    textAlign: \"right\",\n    color: \"#ffffff\",\n    fontSize: 20\n  },\n  headStyle: {\n    paddingTop: 30,\n    paddingRight: 10,\n    backgroundColor: Platform.OS === \"android\" ? \"#31e981\" : \"#35605a\",\n    flex: 1,\n    flexDirection: \"row\",\n    borderBottomWidth: 2,\n    borderColor: \"#000000\"\n  },\n  logoStyle: {\n    flex: 1,\n    width: undefined,\n    height: undefined\n  }\n});","map":{"version":3,"sources":["C:/Users/ashle/OneDrive/Documents/expoTest/JabChain/views/Header.js"],"names":["React","MenuNavigator","Header","props","togglerUser","setState","previousState","isLoggedIn","state","display","message","styles","headStyle","headText","Component","StyleSheet","create","textAlign","color","fontSize","paddingTop","paddingRight","backgroundColor","Platform","OS","flex","flexDirection","borderBottomWidth","borderColor","logoStyle","width","undefined","height"],"mappings":";;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT;AAEA,WAAaC,MAAb;AAAA;;AAAA;;AACE,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAKnBC,WALmB,GAKL,YAAM;AAClB,YAAKC,QAAL,CAAc,UAACC,aAAD,EAAmB;AAC/B,eAAO;AAAEC,UAAAA,UAAU,EAAE,CAACD,aAAa,CAACC;AAA7B,SAAP;AACD,OAFD;AAGD,KATkB;;AAEjB,UAAKC,KAAL,GAAa;AAAED,MAAAA,UAAU,EAAE;AAAd,KAAb;AAFiB;AAGlB;;AAJH;AAAA;AAAA,WAcE,kBAAS;AACP,UAAIE,OAAO,GAAG,KAAKD,KAAL,CAAWD,UAAX,GAAwB,aAAxB,GAAwC,KAAKJ,KAAL,CAAWO,OAAjE;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAA8B,QAAA,OAAO,EAAE,KAAKT,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEGK,OAFH,CALF,CADF;AAYD;AA5BH;;AAAA;AAAA,EAA4BT,KAAK,CAACc,SAAlC;AA+BA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,QAAQ,EAAE;AACRI,IAAAA,SAAS,EAAE,OADH;AAERC,IAAAA,KAAK,EAAE,SAFC;AAGRC,IAAAA,QAAQ,EAAE;AAHF,GADqB;AAM/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,UAAU,EAAE,EADH;AAETC,IAAAA,YAAY,EAAE,EAFL;AAGTC,IAAAA,eAAe,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,SAA5B,GAAwC,SAHhD;AAITC,IAAAA,IAAI,EAAE,CAJG;AAKTC,IAAAA,aAAa,EAAE,KALN;AAMTC,IAAAA,iBAAiB,EAAE,CANV;AAOTC,IAAAA,WAAW,EAAE;AAPJ,GANoB;AAe/BC,EAAAA,SAAS,EAAE;AACTJ,IAAAA,IAAI,EAAE,CADG;AAETK,IAAAA,KAAK,EAAEC,SAFE;AAGTC,IAAAA,MAAM,EAAED;AAHC;AAfoB,CAAlB,CAAf","sourcesContent":["import { Platform, StyleSheet, Text, View, Image } from \"react-native\";\r\nimport React from \"react\";\r\nimport { MenuNavigator } from \"../routes/NavigationService\";\r\n\r\nexport class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props); //allows access to parent class, will provide reference error otherwis\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  togglerUser = () => {\r\n    this.setState((previousState) => {\r\n      return { isLoggedIn: !previousState.isLoggedIn };\r\n    });\r\n  };\r\n\r\n  //arrow function in toggerUser means we don't have to bind to this\r\n\r\n  render() {\r\n    let display = this.state.isLoggedIn ? \"Sample User\" : this.props.message;\r\n    return (\r\n      <View style={styles.headStyle}>\r\n        {/* <Image\r\n          style={styles.logoStyle}\r\n          source={require(\"../Sections/images/blockchain.jpg\")}\r\n        /> */}\r\n        <Text style={styles.headText} onPress={this.togglerUser}>\r\n          {\" \"}\r\n          {display}\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  headText: {\r\n    textAlign: \"right\",\r\n    color: \"#ffffff\",\r\n    fontSize: 20,\r\n  },\r\n  headStyle: {\r\n    paddingTop: 30,\r\n    paddingRight: 10,\r\n    backgroundColor: Platform.OS === \"android\" ? \"#31e981\" : \"#35605a\",\r\n    flex: 1, //positive value works in the way of other components\r\n    flexDirection: \"row\", //so image and text appear side by side\r\n    borderBottomWidth: 2,\r\n    borderColor: \"#000000\",\r\n  },\r\n  logoStyle: {\r\n    flex: 1,\r\n    width: undefined,\r\n    height: undefined,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
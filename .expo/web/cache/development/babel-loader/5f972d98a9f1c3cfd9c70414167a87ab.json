{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashle\\\\OneDrive\\\\Documents\\\\expoTest\\\\JabChain\\\\views\\\\PdfExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pdf from \"react-native-pdf\";\n\nvar PDFExample = function (_React$Component) {\n  _inherits(PDFExample, _React$Component);\n\n  var _super = _createSuper(PDFExample);\n\n  function PDFExample() {\n    _classCallCheck(this, PDFExample);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PDFExample, [{\n    key: \"render\",\n    value: function render() {\n      var source = {\n        uri: \"http://samples.leanpub.com/thereactnativebook-sample.pdf\",\n        cache: true\n      };\n      statement_02Jan2021;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(Pdf, {\n        source: source,\n        onLoadComplete: function onLoadComplete(numberOfPages, filePath) {\n          console.log(\"number of pages: \" + numberOfPages);\n        },\n        onPageChanged: function onPageChanged(page, numberOfPages) {\n          console.log(\"current page: \" + page);\n        },\n        onError: function onError(error) {\n          console.log(error);\n        },\n        onPressLink: function onPressLink(uri) {\n          console.log(\"Link presse: \" + uri);\n        },\n        style: styles.pdf,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return PDFExample;\n}(React.Component);\n\nexport { PDFExample as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginTop: 25\n  },\n  pdf: {\n    flex: 1,\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  }\n});","map":{"version":3,"sources":["C:/Users/ashle/OneDrive/Documents/expoTest/JabChain/views/PdfExample.js"],"names":["React","Pdf","PDFExample","source","uri","cache","statement_02Jan2021","styles","container","numberOfPages","filePath","console","log","page","error","pdf","Component","StyleSheet","create","flex","justifyContent","alignItems","marginTop","width","Dimensions","get","height"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,OAAOC,GAAP,MAAgB,kBAAhB;;IAEqBC,U;;;;;;;;;;;;;WACnB,kBAAS;AACP,UAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAE,0DADQ;AAEbC,QAAAA,KAAK,EAAE;AAFM,OAAf;AAUAC,MAAAA,mBAAmB;AAEnB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AACE,QAAA,MAAM,EAAEL,MADV;AAEE,QAAA,cAAc,EAAE,wBAACM,aAAD,EAAgBC,QAAhB,EAA6B;AAC3CC,UAAAA,OAAO,CAACC,GAAR,uBAAgCH,aAAhC;AACD,SAJH;AAKE,QAAA,aAAa,EAAE,uBAACI,IAAD,EAAOJ,aAAP,EAAyB;AACtCE,UAAAA,OAAO,CAACC,GAAR,oBAA6BC,IAA7B;AACD,SAPH;AAQE,QAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClBH,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,SAVH;AAWE,QAAA,WAAW,EAAE,qBAACV,GAAD,EAAS;AACpBO,UAAAA,OAAO,CAACC,GAAR,mBAA4BR,GAA5B;AACD,SAbH;AAcE,QAAA,KAAK,EAAEG,MAAM,CAACQ,GAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAoBD;;;;EAlCqCf,KAAK,CAACgB,S;;SAAzBd,U;AAqCrB,IAAMK,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,YAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,SAAS,EAAE;AAJF,GADoB;AAO/BP,EAAAA,GAAG,EAAE;AACHI,IAAAA,IAAI,EAAE,CADH;AAEHI,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAF7B;AAGHG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAH9B;AAP0B,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Dimensions, View } from \"react-native\";\r\n\r\nimport Pdf from \"react-native-pdf\";\r\n\r\nexport default class PDFExample extends React.Component {\r\n  render() {\r\n    const source = {\r\n      uri: \"http://samples.leanpub.com/thereactnativebook-sample.pdf\",\r\n      cache: true,\r\n    };\r\n    //const source = require('./test.pdf');  // ios only\r\n    //const source = {uri:'bundle-assets://test.pdf'};\r\n\r\n    //const source = {uri:'file:///sdcard/test.pdf'};\r\n    //const source = {uri:\"data:application/pdf;base64,JVBERi0xLjcKJc...\"};\r\n\r\n    statement_02Jan2021;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Pdf\r\n          source={source}\r\n          onLoadComplete={(numberOfPages, filePath) => {\r\n            console.log(`number of pages: ${numberOfPages}`);\r\n          }}\r\n          onPageChanged={(page, numberOfPages) => {\r\n            console.log(`current page: ${page}`);\r\n          }}\r\n          onError={(error) => {\r\n            console.log(error);\r\n          }}\r\n          onPressLink={(uri) => {\r\n            console.log(`Link presse: ${uri}`);\r\n          }}\r\n          style={styles.pdf}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    marginTop: 25,\r\n  },\r\n  pdf: {\r\n    flex: 1,\r\n    width: Dimensions.get(\"window\").width,\r\n    height: Dimensions.get(\"window\").height,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
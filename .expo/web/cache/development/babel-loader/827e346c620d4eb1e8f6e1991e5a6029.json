{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport * as LocalAuthentication from \"expo-local-authentication\";\n\nvar BiometricPopup = function (_Component) {\n  _inherits(BiometricPopup, _Component);\n\n  var _super = _createSuper(BiometricPopup);\n\n  function BiometricPopup(props) {\n    var _this;\n\n    _classCallCheck(this, BiometricPopup);\n\n    _this = _super.call(this, props);\n\n    _this.checkDeviceForHardware = function _callee() {\n      var compatible;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(LocalAuthentication.hasHardwareAsync());\n\n            case 2:\n              compatible = _context.sent;\n\n              if (compatible) {\n                alert(\"Compatible Device!\");\n              } else alert(\"Current device does not have the necessary hardware!\");\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      errorMessageLegacy: undefined,\n      biometricLegacy: undefined\n    };\n    _this.description = null;\n    return _this;\n  }\n\n  _createClass(BiometricPopup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkDeviceForHardware();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return false;\n    }\n  }]);\n\n  return BiometricPopup;\n}(Component);\n\nexport { BiometricPopup as default };","map":{"version":3,"sources":["/Users/ash_mac/Documents/JabChain/JabChain/Authentication.js"],"names":["React","Component","LocalAuthentication","BiometricPopup","props","checkDeviceForHardware","hasHardwareAsync","compatible","alert","state","errorMessageLegacy","undefined","biometricLegacy","description"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,KAAKC,mBAAZ,MAAqC,2BAArC;;IAKqBC,c;;;;;AACnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAqBnBC,sBArBmB,GAqBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACAH,mBAAmB,CAACI,gBAApB,EADA;;AAAA;AACnBC,cAAAA,UADmB;;AAEvB,kBAAIA,UAAJ,EAAgB;AACdC,gBAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,eAFD,MAEOA,KAAK,CAAC,sDAAD,CAAL;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArBN;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAEC,SADT;AAEXC,MAAAA,eAAe,EAAED;AAFN,KAAb;AAKA,UAAKE,WAAL,GAAmB,IAAnB;AAPiB;AAQlB;;;;WAED,6BAAoB;AAElB,WAAKR,sBAAL;AACD;;;WAeD,kBAAS;AACP,aAAO,KAAP;AACD;;;;EA/ByCJ,S;;SAAvBE,c","sourcesContent":["import React, { Component } from \"react\";\n\nimport * as LocalAuthentication from \"expo-local-authentication\";\n// - this example component supports both the\n//   legacy device-specific (Android < v23) and\n//   current (Android >= 23) biometric APIs\n// - your lib and implementation may not need both\nexport default class BiometricPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessageLegacy: undefined,\n      biometricLegacy: undefined,\n    };\n\n    this.description = null;\n  }\n\n  componentDidMount() {\n    // this.fuckSake;\n    this.checkDeviceForHardware();\n  }\n  //     let compatible = await LocalAuthentication.hasHardwareAsync();\n  //     if (compatible) {\n  //     alert('Compatible Device!');\n  //     }\n  //     else alert('Current device does not have the necessary hardware!');\n  //    };\n\n  checkDeviceForHardware = async () => {\n    let compatible = await LocalAuthentication.hasHardwareAsync();\n    if (compatible) {\n      alert(\"Compatible Device!\");\n    } else alert(\"Current device does not have the necessary hardware!\");\n  };\n\n  render() {\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
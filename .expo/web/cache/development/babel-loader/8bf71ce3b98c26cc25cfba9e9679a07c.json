{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashle\\\\OneDrive\\\\Documents\\\\expoTest\\\\JabChain\\\\assets\\\\VerifyFloatingButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styled from \"styled-components\";\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport BarcodeScanner from \"./BarcodeScanner\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport GoToButton from \"./Test\";\nimport { supportedAuthenticationTypesAsync } from \"expo-local-authentication\";\nimport { HomeNavigate } from \"../navigation/BaseNavigationService\";\nimport { Homepage } from \"../views/Homepage\";\nimport * as RootNavigation from \"../navigation/RootNavigation\";\n\nvar VerifyFloatingButton = function (_React$Component) {\n  _inherits(VerifyFloatingButton, _React$Component);\n\n  var _super = _createSuper(VerifyFloatingButton);\n\n  function VerifyFloatingButton() {\n    var _this;\n\n    _classCallCheck(this, VerifyFloatingButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.animation = new Animated.Value(0);\n\n    _this.toggleMenu = function () {\n      var toValue = _this.open ? 0 : 1;\n      Animated.spring(_this.animation, {\n        useNativeDriver: true,\n        toValue: toValue,\n        friction: 5\n      }).start();\n      _this.open = !_this.open;\n    };\n\n    return _this;\n  }\n\n  _createClass(VerifyFloatingButton, [{\n    key: \"render\",\n    value: function render() {\n      var pinStyle = {\n        transform: [{\n          scale: this.animation\n        }, {\n          translateY: this.animation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -20]\n          })\n        }]\n      };\n      var thumbStyle = {\n        transform: [{\n          scale: this.animation\n        }, {\n          translateY: this.animation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -40]\n          })\n        }]\n      };\n      var rotation = {\n        transform: [{\n          rotate: this.animation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\"0deg\", \"45deg\"]\n          })\n        }]\n      };\n      var opacity = this.animation.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 0, 1]\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: thumbStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: (styles.button, styles.secondary),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, React.createElement(Entypo, {\n        name: \"thumbs-up\",\n        color: \"red\",\n        onPress: function onPress() {\n          RootNavigation.navigate(\"BarcodeScanner\");\n        },\n        size: 17,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      })))), React.createElement(TouchableWithoutFeedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: pinStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: (styles.button, styles.secondary),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, React.createElement(Entypo, {\n        name: \"location-pin\",\n        color: \"red\",\n        onPress: function onPress() {\n          RootNavigation.navigate(\"BarcodeScanner\");\n        },\n        size: 17,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      })))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.toggleMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: rotation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }, React.createElement(AntDesign, {\n        name: \"plus\",\n        backgroundColor: \"red\",\n        size: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return VerifyFloatingButton;\n}(React.Component);\n\nexport { VerifyFloatingButton as default };\nvar styles = StyleSheet.create({\n  shadow: {},\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 300\n  },\n  button: {\n    shadowOffset: {\n      width: 10,\n      height: 10\n    },\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    elevation: 0.1,\n    width: 60,\n    height: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 60 / 2\n  },\n  secondary: {\n    shadowOffset: {\n      width: 10,\n      height: 10\n    },\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    elevation: 0.1,\n    width: 60,\n    height: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 60 / 2,\n    backgroundColor: \"grey\"\n  },\n  menu: {\n    backgroundColor: \"red\"\n  }\n});","map":{"version":3,"sources":["C:/Users/ashle/OneDrive/Documents/expoTest/JabChain/assets/VerifyFloatingButton.js"],"names":["React","styled","AntDesign","Entypo","BarcodeScanner","useNavigation","GoToButton","supportedAuthenticationTypesAsync","HomeNavigate","Homepage","RootNavigation","VerifyFloatingButton","animation","Animated","Value","toggleMenu","toValue","open","spring","useNativeDriver","friction","start","pinStyle","transform","scale","translateY","interpolate","inputRange","outputRange","thumbStyle","rotation","rotate","opacity","styles","container","button","secondary","navigate","Component","StyleSheet","create","shadow","alignItems","justifyContent","marginTop","shadowOffset","width","height","shadowColor","shadowOpacity","elevation","borderRadius","backgroundColor","menu"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  Animated,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\r\nimport BarcodeScanner from \"./BarcodeScanner\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport GoToButton from \"./Test\";\r\nimport { supportedAuthenticationTypesAsync } from \"expo-local-authentication\";\r\nimport { HomeNavigate } from \"../navigation/BaseNavigationService\";\r\nimport { Homepage } from \"../views/Homepage\";\r\nimport * as RootNavigation from \"../navigation/RootNavigation\";\r\n\r\n// function Him() {\r\n//   const navigation = useNavigation();\r\n\r\n//   navigation.navigate(\"BarcodeScanner\");\r\n// }\r\n\r\nexport default class VerifyFloatingButton extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   console.log(this.props);\r\n  // }\r\n\r\n  animation = new Animated.Value(0);\r\n\r\n  toggleMenu = () => {\r\n    const toValue = this.open ? 0 : 1;\r\n\r\n    Animated.spring(this.animation, {\r\n      useNativeDriver: true,\r\n      toValue,\r\n      friction: 5,\r\n    }).start();\r\n\r\n    this.open = !this.open;\r\n  };\r\n\r\n  render() {\r\n    const pinStyle = {\r\n      transform: [\r\n        { scale: this.animation },\r\n        {\r\n          translateY: this.animation.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: [0, -20],\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n\r\n    const thumbStyle = {\r\n      transform: [\r\n        { scale: this.animation },\r\n        {\r\n          translateY: this.animation.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: [0, -40],\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n\r\n    const rotation = {\r\n      transform: [\r\n        {\r\n          rotate: this.animation.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: [\"0deg\", \"45deg\"],\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n\r\n    const opacity = this.animation.interpolate({\r\n      inputRange: [0, 0.5, 1],\r\n      outputRange: [0, 0, 1],\r\n    });\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        {/* <Image source={require(\"../assets/verifylogo.png\")} resize=\"cover\" style={{width:500, height : 900, opacity:0.5}} ></Image> */}\r\n\r\n        {/* <TouchableWithoutFeedback>\r\n     <Animated.View style={styles.button, styles.secondary}>\r\n    <AntDesign name=\"hearto\" size={20} color=\"#F02A4B\">/ </AntDesign>\r\n     </Animated.View>\r\n    </TouchableWithoutFeedback>\r\n\r\n\r\n    <TouchableWithoutFeedback>\r\n     <Animated.View style={styles.button, styles.secondary}></Animated.View>\r\n     <Image/>\r\n    </TouchableWithoutFeedback>\r\n\r\n    <TouchableWithoutFeedback>\r\n     <Animated.View style={styles.button, styles.secondary}></Animated.View>\r\n     <Image/>\r\n    </TouchableWithoutFeedback> */}\r\n\r\n        <TouchableWithoutFeedback>\r\n          <Animated.View style={thumbStyle}>\r\n            <View style={(styles.button, styles.secondary)}>\r\n              <Entypo\r\n                name=\"thumbs-up\"\r\n                color=\"red\"\r\n                onPress={() => {\r\n                  RootNavigation.navigate(\"BarcodeScanner\");\r\n                }}\r\n                size={17}\r\n              ></Entypo>\r\n            </View>\r\n          </Animated.View>\r\n        </TouchableWithoutFeedback>\r\n\r\n        <TouchableWithoutFeedback>\r\n          <Animated.View style={pinStyle}>\r\n            <View style={(styles.button, styles.secondary)}>\r\n              <Entypo\r\n                name=\"location-pin\"\r\n                color=\"red\"\r\n                onPress={() => {\r\n                  RootNavigation.navigate(\"BarcodeScanner\");\r\n                }}\r\n                size={17}\r\n              ></Entypo>\r\n            </View>\r\n          </Animated.View>\r\n        </TouchableWithoutFeedback>\r\n\r\n        <TouchableWithoutFeedback onPress={this.toggleMenu}>\r\n          <Animated.View style={rotation}>\r\n            <View style={styles.button}>\r\n              <AntDesign\r\n                name=\"plus\"\r\n                backgroundColor=\"red\"\r\n                size={24}\r\n              ></AntDesign>\r\n            </View>\r\n          </Animated.View>\r\n        </TouchableWithoutFeedback>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  shadow: {\r\n    // elevation: 5,\r\n    // backgroundColor: \"red\",\r\n  },\r\n\r\n  container: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n\r\n    marginTop: 300,\r\n\r\n    // position:\"absolute\" //this might f it up but the guy uses it in the vid\r\n  },\r\n  button: {\r\n    shadowOffset: { width: 10, height: 10 },\r\n    shadowColor: \"black\",\r\n    shadowOpacity: 0.3,\r\n    elevation: 0.1,\r\n    width: 60,\r\n    height: 60,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 60 / 2,\r\n  },\r\n  secondary: {\r\n    shadowOffset: { width: 10, height: 10 },\r\n    shadowColor: \"black\",\r\n    shadowOpacity: 0.3,\r\n    elevation: 0.1,\r\n    width: 60,\r\n    height: 60,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 60 / 2,\r\n    backgroundColor: \"grey\",\r\n  },\r\n  menu: {\r\n    backgroundColor: \"red\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}